>>>>> TEST GET METHOD OF TestJobServlet SERVLET <<<<<
Result response data after GET request:
--------------------------------------------
{"jobContent":"/**\n DBCommonConfig.sh DBConfigServlet.sh DestTest.sh ImportInstanceServlet.sh JobDeclaredServlet.sh JobDocInfoServlet.sh LogFileInfoServlet.sh PolicyServlet.sh README.md Run_all_script.sh TestJobServlet.sh Test_logs Test_logs_ MySQL\u306E\u30D0\u30FC\u30B8\u30E7\u30F3\u60C5\u5831\u3092\u76E3\u8996\u3057\u307E\u3059\u3002<br/>\n DBCommonConfig.sh DBConfigServlet.sh DestTest.sh ImportInstanceServlet.sh JobDeclaredServlet.sh JobDocInfoServlet.sh LogFileInfoServlet.sh PolicyServlet.sh README.md Run_all_script.sh TestJobServlet.sh Test_logs Test_logs_ <p>\n DBCommonConfig.sh DBConfigServlet.sh DestTest.sh ImportInstanceServlet.sh JobDeclaredServlet.sh JobDocInfoServlet.sh LogFileInfoServlet.sh PolicyServlet.sh README.md Run_all_script.sh TestJobServlet.sh Test_logs Test_logs_ \u73FE\u5728\u4F7F\u7528\u3057\u3066\u3044\u308BMySQL\u306E\u30D0\u30FC\u30B8\u30E7\u30F3\u60C5\u5831\u3092\u53D6\u5F97\u3057\u307E\u3059\u3002\n DBCommonConfig.sh DBConfigServlet.sh DestTest.sh ImportInstanceServlet.sh JobDeclaredServlet.sh JobDocInfoServlet.sh LogFileInfoServlet.sh PolicyServlet.sh README.md Run_all_script.sh TestJobServlet.sh Test_logs Test_logs_ </p> \n DBCommonConfig.sh DBConfigServlet.sh DestTest.sh ImportInstanceServlet.sh JobDeclaredServlet.sh JobDocInfoServlet.sh LogFileInfoServlet.sh PolicyServlet.sh README.md Run_all_script.sh TestJobServlet.sh Test_logs Test_logs_ @targetVersion 5.1+\n DBCommonConfig.sh DBConfigServlet.sh DestTest.sh ImportInstanceServlet.sh JobDeclaredServlet.sh JobDocInfoServlet.sh LogFileInfoServlet.sh PolicyServlet.sh README.md Run_all_script.sh TestJobServlet.sh Test_logs Test_logs_ @return \u30B5\u30F3\u30D7\u30EA\u30F3\u30B0\u6BCE\u306B1\u30EC\u30B3\u30FC\u30C9\u306E\u30C7\u30FC\u30BF\u3092\u53D6\u5F97\u3057\u307E\u3059\u3002\n DBCommonConfig.sh DBConfigServlet.sh DestTest.sh ImportInstanceServlet.sh JobDeclaredServlet.sh JobDocInfoServlet.sh LogFileInfoServlet.sh PolicyServlet.sh README.md Run_all_script.sh TestJobServlet.sh Test_logs Test_logs_ @returnParam ProtocolVersionTxt \u30AF\u30E9\u30A4\u30A2\u30F3\u30C8/\u30B5\u30FC\u30D0\u30FC\u9593\u306E\u30D7\u30ED\u30C8\u30B3\u30EB\u30D0\u30FC\u30B8\u30E7\u30F3\u756A\u53F7\n DBCommonConfig.sh DBConfigServlet.sh DestTest.sh ImportInstanceServlet.sh JobDeclaredServlet.sh JobDocInfoServlet.sh LogFileInfoServlet.sh PolicyServlet.sh README.md Run_all_script.sh TestJobServlet.sh Test_logs Test_logs_ @returnParam VersionTxt MySQL\u30B5\u30FC\u30D0\u306E\u30D0\u30FC\u30B8\u30E7\u30F3\u756A\u53F7\n DBCommonConfig.sh DBConfigServlet.sh DestTest.sh ImportInstanceServlet.sh JobDeclaredServlet.sh JobDocInfoServlet.sh LogFileInfoServlet.sh PolicyServlet.sh README.md Run_all_script.sh TestJobServlet.sh Test_logs Test_logs_ @returnParam VersionCommentTxt MySQL\u30B5\u30FC\u30D0\u306E\u30D0\u30FC\u30B8\u30E7\u30F3\u30B3\u30E1\u30F3\u30C8\n DBCommonConfig.sh DBConfigServlet.sh DestTest.sh ImportInstanceServlet.sh JobDeclaredServlet.sh JobDocInfoServlet.sh LogFileInfoServlet.sh PolicyServlet.sh README.md Run_all_script.sh TestJobServlet.sh Test_logs Test_logs_ @returnParam VersionCompileMachineTxt MySQL\u304C\u30B3\u30F3\u30D1\u30A4\u30EB/\u30D3\u30EB\u30C9\u3055\u308C\u305F\u30DE\u30B7\u30F3\u306E\u7A2E\u985E(x86_64\u306A\u3069)\n DBCommonConfig.sh DBConfigServlet.sh DestTest.sh ImportInstanceServlet.sh JobDeclaredServlet.sh JobDocInfoServlet.sh LogFileInfoServlet.sh PolicyServlet.sh README.md Run_all_script.sh TestJobServlet.sh Test_logs Test_logs_ @returnParam VersionCompileOsTxt MySQL\u304C\u30B3\u30F3\u30D1\u30A4\u30EB/\u30D3\u30EB\u30C9\u3055\u308C\u305F\u30DE\u30B7\u30F3\u306EOS(Win64\u306A\u3069)\n */\nJOB = [ name: \"MySQL.Database_Structure.DatabaseVersion\" ]\nQUERY = '''\n\tSELECT A.ProtocolVersionTxt, B.VersionTxt, C.VersionCommentTxt, D.VersionCompileMachineTxt, E.VersionCompileOsTxt\n\tFROM\n\t(SELECT G.`variable_value` as ProtocolVersionTxt\n\tFROM `information_schema`.GLOBAL_VARIABLES G\n\twhere G.variable_name = \"protocol_version\" ) A,\n\t(SELECT G.`variable_value` as VersionTxt\n\tFROM `information_schema`.GLOBAL_VARIABLES G\n\twhere G.variable_name = \"version\" ) B,\n\t(SELECT G.`variable_value` as VersionCommentTxt\n\tFROM `information_schema`.GLOBAL_VARIABLES G\n\twhere G.variable_name = \"version_comment\" ) C,\n\t(SELECT G.`variable_value` as VersionCompileMachineTxt\n\tFROM `information_schema`.GLOBAL_VARIABLES G\n\twhere G.variable_name = \"version_compile_machine\" ) D,\n\t(SELECT G.`variable_value` as VersionCompileOsTxt\n\tFROM `information_schema`.GLOBAL_VARIABLES G\n\twhere G.variable_name = \"version_compile_os\" ) E;\n'''\nSENDTYPE = \"Store\"\nMONITORINGTYPE = \"@DB\"\nRESOURCEID = \"Sr/MyDbVer\"\nDBTYPE = \"@MYSQL\"\nDEST = parameters.dest\n"}
--------------------------------------------
Check OK if content contains string : [JOB = [ name: "MySQL.Database_Structure.DatabaseVersion"]
[MESSAGE TEST] GET IS OK
>>>>> TEST POST METHOD OF TestJobServlet SERVLET <<<<<
Result response data after POST request:
--------------------------------------------
{"status":"failed","jobData":{"message":null,"stackTraceDepth":49,"cause":null,"localizedMessage":null,"stackTrace":[{"className":"java.io.Writer","nativeMethod":false,"lineNumber":140,"fileName":"Writer.java","methodName":"write"},{"className":"org.codehaus.groovy.runtime.ResourceGroovyMethods","nativeMethod":false,"lineNumber":814,"fileName":"ResourceGroovyMethods.java","methodName":"write"},{"className":"org.codehaus.groovy.runtime.dgm$885","nativeMethod":false,"lineNumber":-1,"fileName":null,"methodName":"invoke"},{"className":"org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce","nativeMethod":false,"lineNumber":271,"fileName":"PojoMetaMethodSite.java","methodName":"invoke"},{"className":"org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite","nativeMethod":false,"lineNumber":53,"fileName":"PojoMetaMethodSite.java","methodName":"call"},{"className":"org.codehaus.groovy.runtime.callsite.AbstractCallSite","nativeMethod":false,"lineNumber":120,"fileName":"AbstractCallSite.java","methodName":"call"},{"className":"TestJob","nativeMethod":false,"lineNumber":240,"fileName":"TestJobServlet.groovy","methodName":"writeToFile"},{"className":"TestJob$writeToFile$0","nativeMethod":false,"lineNumber":-1,"fileName":null,"methodName":"callCurrent"},{"className":"TestJob","nativeMethod":false,"lineNumber":135,"fileName":"TestJobServlet.groovy","methodName":"doPost"},{"className":"javax.servlet.http.HttpServlet","nativeMethod":false,"lineNumber":713,"fileName":"HttpServlet.java","methodName":"service"},{"className":"javax.servlet.http.HttpServlet","nativeMethod":false,"lineNumber":806,"fileName":"HttpServlet.java","methodName":"service"},{"className":"net.javaforge.netty.servlet.bridge.impl.FilterChainImpl","nativeMethod":false,"lineNumber":60,"fileName":"FilterChainImpl.java","methodName":"doFilter"},{"className":"net.javaforge.netty.servlet.bridge.ServletBridgeHandler","nativeMethod":false,"lineNumber":120,"fileName":"ServletBridgeHandler.java","methodName":"handleHttpServletRequest"},{"className":"net.javaforge.netty.servlet.bridge.ServletBridgeHandler","nativeMethod":false,"lineNumber":95,"fileName":"ServletBridgeHandler.java","methodName":"messageReceived"},{"className":"org.jboss.netty.channel.SimpleChannelHandler","nativeMethod":false,"lineNumber":88,"fileName":"SimpleChannelHandler.java","methodName":"handleUpstream"},{"className":"org.jboss.netty.handler.timeout.IdleStateAwareChannelHandler","nativeMethod":false,"lineNumber":36,"fileName":"IdleStateAwareChannelHandler.java","methodName":"handleUpstream"},{"className":"org.jboss.netty.channel.DefaultChannelPipeline","nativeMethod":false,"lineNumber":560,"fileName":"DefaultChannelPipeline.java","methodName":"sendUpstream"},{"className":"org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext","nativeMethod":false,"lineNumber":787,"fileName":"DefaultChannelPipeline.java","methodName":"sendUpstream"},{"className":"org.jboss.netty.handler.timeout.IdleStateHandler","nativeMethod":false,"lineNumber":294,"fileName":"IdleStateHandler.java","methodName":"messageReceived"},{"className":"org.jboss.netty.channel.SimpleChannelUpstreamHandler","nativeMethod":false,"lineNumber":70,"fileName":"SimpleChannelUpstreamHandler.java","methodName":"handleUpstream"},{"className":"org.jboss.netty.channel.DefaultChannelPipeline","nativeMethod":false,"lineNumber":560,"fileName":"DefaultChannelPipeline.java","methodName":"sendUpstream"},{"className":"org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext","nativeMethod":false,"lineNumber":787,"fileName":"DefaultChannelPipeline.java","methodName":"sendUpstream"},{"className":"org.jboss.netty.handler.codec.http.HttpContentEncoder","nativeMethod":false,"lineNumber":81,"fileName":"HttpContentEncoder.java","methodName":"messageReceived"},{"className":"org.jboss.netty.channel.SimpleChannelHandler","nativeMethod":false,"lineNumber":88,"fileName":"SimpleChannelHandler.java","methodName":"handleUpstream"},{"className":"org.jboss.netty.channel.DefaultChannelPipeline","nativeMethod":false,"lineNumber":560,"fileName":"DefaultChannelPipeline.java","methodName":"sendUpstream"},{"className":"org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext","nativeMethod":false,"lineNumber":787,"fileName":"DefaultChannelPipeline.java","methodName":"sendUpstream"},{"className":"org.jboss.netty.handler.codec.http.HttpChunkAggregator","nativeMethod":false,"lineNumber":148,"fileName":"HttpChunkAggregator.java","methodName":"messageReceived"},{"className":"org.jboss.netty.channel.SimpleChannelUpstreamHandler","nativeMethod":false,"lineNumber":70,"fileName":"SimpleChannelUpstreamHandler.java","methodName":"handleUpstream"},{"className":"org.jboss.netty.channel.DefaultChannelPipeline","nativeMethod":false,"lineNumber":560,"fileName":"DefaultChannelPipeline.java","methodName":"sendUpstream"},{"className":"org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext","nativeMethod":false,"lineNumber":787,"fileName":"DefaultChannelPipeline.java","methodName":"sendUpstream"},{"className":"org.jboss.netty.channel.Channels","nativeMethod":false,"lineNumber":296,"fileName":"Channels.java","methodName":"fireMessageReceived"},{"className":"org.jboss.netty.handler.codec.frame.FrameDecoder","nativeMethod":false,"lineNumber":459,"fileName":"FrameDecoder.java","methodName":"unfoldAndFireMessageReceived"},{"className":"org.jboss.netty.handler.codec.replay.ReplayingDecoder","nativeMethod":false,"lineNumber":536,"fileName":"ReplayingDecoder.java","methodName":"callDecode"},{"className":"org.jboss.netty.handler.codec.replay.ReplayingDecoder","nativeMethod":false,"lineNumber":435,"fileName":"ReplayingDecoder.java","methodName":"messageReceived"},{"className":"org.jboss.netty.channel.SimpleChannelUpstreamHandler","nativeMethod":false,"lineNumber":70,"fileName":"SimpleChannelUpstreamHandler.java","methodName":"handleUpstream"},{"className":"org.jboss.netty.channel.DefaultChannelPipeline","nativeMethod":false,"lineNumber":560,"fileName":"DefaultChannelPipeline.java","methodName":"sendUpstream"},{"className":"org.jboss.netty.channel.DefaultChannelPipeline","nativeMethod":false,"lineNumber":555,"fileName":"DefaultChannelPipeline.java","methodName":"sendUpstream"},{"className":"org.jboss.netty.channel.Channels","nativeMethod":false,"lineNumber":268,"fileName":"Channels.java","methodName":"fireMessageReceived"},{"className":"org.jboss.netty.channel.Channels","nativeMethod":false,"lineNumber":255,"fileName":"Channels.java","methodName":"fireMessageReceived"},{"className":"org.jboss.netty.channel.socket.nio.NioWorker","nativeMethod":false,"lineNumber":88,"fileName":"NioWorker.java","methodName":"read"},{"className":"org.jboss.netty.channel.socket.nio.AbstractNioWorker","nativeMethod":false,"lineNumber":107,"fileName":"AbstractNioWorker.java","methodName":"process"},{"className":"org.jboss.netty.channel.socket.nio.AbstractNioSelector","nativeMethod":false,"lineNumber":312,"fileName":"AbstractNioSelector.java","methodName":"run"},{"className":"org.jboss.netty.channel.socket.nio.AbstractNioWorker","nativeMethod":false,"lineNumber":88,"fileName":"AbstractNioWorker.java","methodName":"run"},{"className":"org.jboss.netty.channel.socket.nio.NioWorker","nativeMethod":false,"lineNumber":178,"fileName":"NioWorker.java","methodName":"run"},{"className":"org.jboss.netty.util.ThreadRenamingRunnable","nativeMethod":false,"lineNumber":108,"fileName":"ThreadRenamingRunnable.java","methodName":"run"},{"className":"org.jboss.netty.util.internal.DeadLockProofWorker$1","nativeMethod":false,"lineNumber":42,"fileName":"DeadLockProofWorker.java","methodName":"run"},{"className":"java.util.concurrent.ThreadPoolExecutor$Worker","nativeMethod":false,"lineNumber":895,"fileName":"ThreadPoolExecutor.java","methodName":"runTask"},{"className":"java.util.concurrent.ThreadPoolExecutor$Worker","nativeMethod":false,"lineNumber":918,"fileName":"ThreadPoolExecutor.java","methodName":"run"},{"className":"java.lang.Thread","nativeMethod":false,"lineNumber":662,"fileName":"Thread.java","methodName":"run"}]},"log":""}
--------------------------------------------
Check OK if content contains string : ["status":"success"]
[MESSAGE TEST] POST IS OK
